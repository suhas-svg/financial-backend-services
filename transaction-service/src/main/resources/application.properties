# ------------------------------------------------
# Application
# ------------------------------------------------
spring.application.name=transaction-service
server.port=8081

# ------------------------------------------------
# Spring Cloud Compatibility
# ------------------------------------------------
spring.cloud.compatibility-verifier.enabled=false

# ------------------------------------------------
# Local Postgres DataSource
# ------------------------------------------------
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/transactiondb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# ------------------------------------------------
# JPA / Hibernate
# ------------------------------------------------
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ------------------------------------------------
# Flyway Database Migration
# ------------------------------------------------
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.table=flyway_schema_history

# ------------------------------------------------
# HikariCP (connection pool)
# ------------------------------------------------
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# ------------------------------------------------
# Redis Configuration (DISABLED - Redis not available)
# ------------------------------------------------
# spring.data.redis.host=${REDIS_HOST:localhost}
# spring.data.redis.port=${REDIS_PORT:6379}
# spring.data.redis.password=${REDIS_PASSWORD:}
# spring.data.redis.timeout=2000ms

# ------------------------------------------------
# Actuator 
# ------------------------------------------------
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
# management.server.port=9002

# Enable Prometheus scrape
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.env=${spring.profiles.active:local}

# ------------------------------------------------
# JWT Security
# ------------------------------------------------
security.jwt.secret=${JWT_SECRET:AY8Ro0HSBFyllm9ZPafT2GWuE/t8Yzq1P0Rf7bNeq14=}
security.jwt.expiration-in-ms=3600000

# ------------------------------------------------
# Enhanced Monitoring Configuration
# ------------------------------------------------
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Enable JVM metrics
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.web=true

# Distributed Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_URL:http://localhost:9411/api/v2/spans}
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Application info
info.app.name=${spring.application.name}
info.app.version=1.0.0
info.app.description=Financial Transaction Service
info.app.java.version=22

# ------------------------------------------------
# Account Service Integration
# ------------------------------------------------
account-service.base-url=${ACCOUNT_SERVICE_URL:http://localhost:8080}
account-service.timeout=5000

# ------------------------------------------------
# Account Service Resilience Configuration
# ------------------------------------------------
# Retry configuration
account-service.resilience.retry.max-attempts=${ACCOUNT_SERVICE_RETRY_MAX_ATTEMPTS:3}
account-service.resilience.retry.wait-duration=${ACCOUNT_SERVICE_RETRY_WAIT_DURATION:1000}

# Circuit breaker configuration
account-service.resilience.circuit-breaker.failure-rate-threshold=${ACCOUNT_SERVICE_CB_FAILURE_RATE:50}
account-service.resilience.circuit-breaker.wait-duration-in-open-state=${ACCOUNT_SERVICE_CB_WAIT_DURATION:30000}
account-service.resilience.circuit-breaker.sliding-window-size=${ACCOUNT_SERVICE_CB_SLIDING_WINDOW:10}
account-service.resilience.circuit-breaker.minimum-number-of-calls=${ACCOUNT_SERVICE_CB_MIN_CALLS:5}

# Time limiter configuration
account-service.resilience.time-limiter.timeout=${ACCOUNT_SERVICE_TIMEOUT:5000}

# ------------------------------------------------
# Transaction Configuration
# ------------------------------------------------
transaction.processing.timeout=30000
transaction.retry.max-attempts=3
transaction.retry.delay=1000

# ------------------------------------------------
# Logging Configuration
# ------------------------------------------------
logging.level.com.suhasan.finance.transaction_service=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ------------------------------------------------
# Audit and Monitoring Configuration
# ------------------------------------------------
# Enable HTTP exchanges tracking
management.endpoint.httpexchanges.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus,httpexchanges

# Custom metrics configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.sla.http.server.requests=50ms,100ms,200ms,500ms

# Enable detailed health indicators
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.redis.enabled=true

# Audit logging configuration
audit.logging.enabled=true
audit.logging.include-request-details=true
audit.logging.include-response-details=false
audit.logging.max-payload-length=1000

# ------------------------------------------------
# Advanced Monitoring and Alerting Configuration
# ------------------------------------------------
# Alerting thresholds
alerting.error-rate.threshold=0.05
alerting.response-time.threshold=2000
alerting.account-service.error-threshold=10
alerting.daily-volume.threshold=10000

# Dashboard metrics configuration
management.metrics.distribution.percentiles-histogram.transaction.processing.duration=true
management.metrics.distribution.percentiles-histogram.account.service.call.duration=true
management.metrics.distribution.percentiles-histogram.database.operation.duration=true

# Additional SLA configurations for dashboard
management.metrics.distribution.sla.transaction.processing.duration=50ms,100ms,200ms,500ms,1s,2s,5s
management.metrics.distribution.sla.account.service.call.duration=100ms,250ms,500ms,1s,2s,5s
management.metrics.distribution.sla.database.operation.duration=10ms,50ms,100ms,250ms,500ms,1s

# Enable additional actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus,httpexchanges,threaddump,heapdump,env,configprops

# Metrics export configuration
management.metrics.export.prometheus.step=PT10S
management.metrics.export.prometheus.descriptions=true

# Enable JVM metrics
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.web=true
management.metrics.enable.tomcat=true

# Custom business metrics tags
management.metrics.tags.business-domain=financial-services
management.metrics.tags.service-tier=core
management.metrics.tags.criticality=high