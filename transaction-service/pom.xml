<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.suhasan.finance</groupId>
	<artifactId>transaction-service</artifactId>
	<version>1.0.0</version>
	<name>transaction-service</name>
	<description>Financial Transaction Service Microservice</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
		<mapstruct.version>1.6.3</mapstruct.version>
		<lombok.version>1.18.36</lombok.version>
		<testcontainers.version>1.20.4</testcontainers.version>
	</properties>
	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.12.6</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Utilities -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<!-- HTTP Client for Account Service Integration -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- Resilience4j for Circuit Breaker and Retry -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-reactor</artifactId>
		</dependency>

		<!-- AOP for audit logging -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- Monitoring -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>8.0</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wiremock</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<version>3.9.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>it.ozimov</groupId>
			<artifactId>embedded-redis</artifactId>
			<version>0.7.3</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Performance Testing Dependencies -->
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_core</artifactId>
			<version>5.6.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_http</artifactId>
			<version>5.6.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_java</artifactId>
			<version>5.6.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>22</source>
					<target>22</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.70</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Flyway Database Migration Plugin -->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>10.21.0</version>
				<configuration>
					<url>${flyway.url}</url>
					<user>${flyway.user}</user>
					<password>${flyway.password}</password>
					<locations>
						<location>classpath:db/migration</location>
					</locations>
					<baselineOnMigrate>true</baselineOnMigrate>
					<validateOnMigrate>true</validateOnMigrate>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.7.4</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<!-- Performance Testing Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/performance/**/*Test.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>performance-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/performance/**/*Test.java</include>
							</includes>
							<excludes>
								<exclude>**/*Test.java</exclude>
							</excludes>
							<systemPropertyVariables>
								<spring.profiles.active>performance</spring.profiles.active>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Development Profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<flyway.url>jdbc:postgresql://localhost:5433/transactiondb_dev</flyway.url>
				<flyway.user>postgres</flyway.user>
				<flyway.password>postgres</flyway.password>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<configuration>
							<url>${flyway.url}</url>
							<user>${flyway.user}</user>
							<password>${flyway.password}</password>
							<locations>
								<location>classpath:db/migration</location>
							</locations>
							<baselineOnMigrate>true</baselineOnMigrate>
							<validateOnMigrate>true</validateOnMigrate>
							<cleanDisabled>false</cleanDisabled>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Staging Profile -->
		<profile>
			<id>staging</id>
			<properties>
				<spring.profiles.active>staging</spring.profiles.active>
				<flyway.url>jdbc:postgresql://staging-db:5432/transactiondb_staging</flyway.url>
				<flyway.user>transaction_staging_user</flyway.user>
				<flyway.password>staging_secure_password</flyway.password>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<configuration>
							<url>${flyway.url}</url>
							<user>${flyway.user}</user>
							<password>${flyway.password}</password>
							<locations>
								<location>classpath:db/migration</location>
							</locations>
							<baselineOnMigrate>true</baselineOnMigrate>
							<validateOnMigrate>true</validateOnMigrate>
							<cleanDisabled>true</cleanDisabled>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Production Profile -->
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<flyway.url>jdbc:postgresql://prod-db:5432/transactiondb</flyway.url>
				<flyway.user>transaction_app_user</flyway.user>
				<flyway.password>${env.FLYWAY_PASSWORD}</flyway.password>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<configuration>
							<url>${flyway.url}</url>
							<user>${flyway.user}</user>
							<password>${flyway.password}</password>
							<locations>
								<location>classpath:db/migration</location>
							</locations>
							<baselineOnMigrate>false</baselineOnMigrate>
							<validateOnMigrate>true</validateOnMigrate>
							<cleanDisabled>true</cleanDisabled>
							<outOfOrder>false</outOfOrder>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Performance Testing Profile -->
		<profile>
			<id>performance</id>
			<properties>
				<maven.test.skip>false</maven.test.skip>
				<skipTests>false</skipTests>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includes>
								<include>**/performance/**/*Test.java</include>
							</includes>
							<excludes>
								<exclude>**/*Test.java</exclude>
							</excludes>
							<systemPropertyVariables>
								<spring.profiles.active>performance</spring.profiles.active>
								<java.awt.headless>true</java.awt.headless>
							</systemPropertyVariables>
							<argLine>
								-Xms1g -Xmx4g 
								-XX:+UseG1GC 
								-XX:MaxGCPauseMillis=200 
								-XX:+UnlockExperimentalVMOptions
								-Djava.awt.headless=true
							</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Database Migration Profile -->
		<profile>
			<id>migrate</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>migrate-database</id>
								<phase>compile</phase>
								<goals>
									<goal>migrate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>