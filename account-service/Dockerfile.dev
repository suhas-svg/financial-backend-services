# Development Dockerfile with debugging capabilities
FROM maven:3.9-eclipse-temurin-22 AS builder

ARG BUILD_ENV=dev
ARG MAVEN_OPTS="-Xmx1024m -XX:+UseG1GC"

WORKDIR /app

# Copy Maven configuration
COPY .mvn/ .mvn/
COPY mvnw mvnw.cmd pom.xml ./
RUN chmod +x mvnw

# Download dependencies
RUN ./mvnw dependency:go-offline -B --no-transfer-progress

# Copy source code
COPY src ./src

# Build with development profile (includes debug symbols)
RUN ./mvnw clean package -DskipTests -B --no-transfer-progress -P${BUILD_ENV}

# Extract JAR layers
RUN java -Djarmode=layertools -jar target/*.jar extract

# ----- RUNTIME STAGE -----
FROM eclipse-temurin:22-jre AS runtime

ARG BUILD_ENV=dev
ARG APP_VERSION=dev-latest
ARG BUILD_DATE
ARG VCS_REF

LABEL maintainer="Account Service Team" \
      org.opencontainers.image.title="Account Service (Development)" \
      org.opencontainers.image.description="Financial Account Service - Development Build" \
      org.opencontainers.image.version="${APP_VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      environment="${BUILD_ENV}"

# Install debugging tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      curl \
      wget \
      netcat-openbsd \
      procps \
      htop && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app
RUN mkdir -p /app/logs /app/tmp && chown -R appuser:appuser /app

# Copy JAR layers
COPY --from=builder --chown=appuser:appuser /app/dependencies/ ./
COPY --from=builder --chown=appuser:appuser /app/spring-boot-loader/ ./
COPY --from=builder --chown=appuser:appuser /app/snapshot-dependencies/ ./
COPY --from=builder --chown=appuser:appuser /app/application/ ./

USER appuser

# Expose ports (including debug port)
EXPOSE 8080 9001 5005

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# JVM options for development (includes remote debugging)
ENV JAVA_OPTS="-XX:+UseContainerSupport \
               -XX:MaxRAMPercentage=75.0 \
               -XX:+UseG1GC \
               -Xdebug \
               -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005 \
               -Djava.security.egd=file:/dev/./urandom \
               -Dspring.profiles.active=${BUILD_ENV} \
               -Dspring.devtools.restart.enabled=true"

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS org.springframework.boot.loader.launch.JarLauncher"]