# # ------------------------------------------------
# # Application
# # ------------------------------------------------
# spring.application.name=account-service
# server.port=8080

# # ------------------------------------------------
# # AWS RDS Postgres DataSource
# # ------------------------------------------------
# # You can hard-code the RDS endpoint, or (better) use env vars:
# spring.datasource.url=jdbc:postgresql://${DB_HOST:database-1.c1koa8mwifcn.us-east-1.rds.amazonaws.com}:${DB_PORT:5432}/${DB_NAME:myfirstdb}?sslmode=require
# spring.datasource.username=${DB_USERNAME:postgres}
# spring.datasource.password=${DB_PASSWORD:postgres}
# spring.datasource.driver-class-name=org.postgresql.Driver

# # ------------------------------------------------
# # JPA / Hibernate
# # ------------------------------------------------
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# # ------------------------------------------------
# # HikariCP (connection pool)
# # ------------------------------------------------
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.minimum-idle=5

# # ------------------------------------------------
# # Actuator (optional)
# # ------------------------------------------------
# management.endpoints.web.exposure.include=health,info,metrics

# security.jwt.secret=${JWT_SECRET:AY8Ro0HSBFyllm9ZPafT2GWuE/t8Yzq1P0Rf7bNeq14=}
# security.jwt.expiration-in-ms=3600000
# ------------------------------------------------
# Application
# ------------------------------------------------
spring.application.name=account-service
server.port=8080

# ------------------------------------------------
# Local Postgres DataSource
# ------------------------------------------------
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/myfirstdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}

spring.datasource.driver-class-name=org.postgresql.Driver

# ------------------------------------------------
# JPA / Hibernate
# ------------------------------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ------------------------------------------------
# HikariCP (connection pool)
# ------------------------------------------------
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# ------------------------------------------------
# Actuator 
# ------------------------------------------------
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
# Serve Actuator on port 9001 (so itâ€™s separate from your API 8080)
# management.server.port=9001

# Enable Prometheus scrape
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
# tag actuator metrics with application and env
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.env=${spring.profiles.active:local}
# ------------------------------------------------
# JWT Security
# ------------------------------------------------
security.jwt.secret=${JWT_SECRET:AY8Ro0HSBFyllm9ZPafT2GWuE/t8Yzq1P0Rf7bNeq14=}
security.jwt.expiration-in-ms=3600000

# ------------------------------------------------
# Enhanced Monitoring Configuration
# ------------------------------------------------
# Enable detailed health information
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Disk space health indicator configuration (set minimum free space to 1GB for development)
management.health.diskspace.threshold=1GB

# Enable JVM metrics
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.web=true

# Application info for /actuator/info
info.app.name=${spring.application.name}
info.app.version=1.0.0
info.app.description=Financial Account Service
info.app.java.version=22
info.app.build-time=@timestamp@
info.app.git-commit=${GIT_COMMIT:unknown}

# Custom application properties for deployment tracking
app.version=${APP_VERSION:1.0.0}
app.build-time=${BUILD_TIME:unknown}
app.git-commit=${GIT_COMMIT:unknown}