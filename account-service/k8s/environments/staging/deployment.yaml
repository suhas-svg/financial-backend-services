apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
  namespace: finance-services-staging
  labels:
    app: account-service
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "9001"
    spec:
      containers:
      - name: account-service
        image: ghcr.io/your-org/account-service:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9001
          name: actuator
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "staging"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: account-service-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: account-service-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: account-service-secrets
              key: JWT_SECRET
        - name: JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -XX:+UseStringDeduplication"
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
          requests:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 9001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9001
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 9001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: account-service-config
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: account-service
  namespace: finance-services-staging
  labels:
    app: account-service
    environment: staging
spec:
  selector:
    app: account-service
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: account-service-actuator
  namespace: finance-services-staging
  labels:
    app: account-service
    environment: staging
spec:
  selector:
    app: account-service
  ports:
  - port: 9001
    targetPort: 9001
    name: actuator
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: account-service-ingress
  namespace: finance-services-staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
spec:
  rules:
  - host: staging.account-service.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: account-service
            port:
              number: 8080
  - host: staging-metrics.account-service.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: account-service-actuator
            port:
              number: 9001