apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: account-service-ingress
  namespace: finance-services
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.yourfinanceapp.com
    secretName: account-service-tls
  rules:
  - host: api.yourfinanceapp.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: account-service
            port:
              number: 8080
---
# Separate ingress for monitoring (internal only)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: account-service-monitoring-ingress
  namespace: finance-services
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  ingressClassName: nginx
  rules:
  - host: monitoring.internal.yourfinanceapp.com
    http:
      paths:
      - path: /actuator
        pathType: Prefix
        backend:
          service:
            name: account-service-actuator
            port:
              number: 9001